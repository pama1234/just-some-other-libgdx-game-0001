apply plugin: 'application'

apply plugin: 'com.google.protobuf'

sourceCompatibility = 17
mainClassName = 'pama1234.gdx.game.app.server.ServerLauncher'
eclipse.project.name = appName + '-game0003-server'

// configurations {
//     all*.exclude group: 'com.esotericsoftware', module: 'kryo'

//     all*.exclude group: 'com.github.pama1234.just-some-other-libgdx-game', module: 'framework-localization'
//     all*.exclude group: 'com.github.pama1234.just-some-other-libgdx-game', module: 'framework-neat'
//     all*.exclude group: 'com.github.pama1234.just-some-other-libgdx-game', module: 'framework-protobuf'
//     all*.exclude group: 'com.github.pama1234.just-some-other-libgdx-game', module: 'server-framework'
// }

dependencies {
  implementation ("com.github.pama1234.just-some-other-libgdx-game:server-framework:$pama1234VersionOld")

  api ("com.github.pama1234.just-some-other-libgdx-game:framework-localization:$pama1234Version")
  api ("com.github.pama1234.just-some-other-libgdx-game:framework-protobuf:$pama1234Version")
  api ("com.github.pama1234.just-some-other-libgdx-game:framework-neat:$pama1234Version")

  api "javax.vecmath:vecmath:$vecmathVersion"
  api "com.esotericsoftware:kryo:$kryoVersion"

  // api 'org.tensorflow:tensorflow-core-platform-gpu:0.5.0'
}

jar {
  archiveBaseName.set(appName)
  // the duplicatesStrategy matters starting in Gradle 7.0; this setting works.
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  dependsOn configurations.runtimeClasspath
  from {
    configurations.runtimeClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
  // these "exclude" lines remove some unnecessary duplicate files in the output JAR.
  exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
  dependencies {
    exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
  }
  // setting the manifest makes the JAR runnable.
  manifest {
    attributes 'Main-Class': project.mainClassName
  }
  // this last step may help on some OSes that need extra instruction to make runnable JARs.
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

// Equivalent to the jar task; here for compatibility with gdx-setup.
task dist(dependsOn: [jar]) {
}

tasks.getByName('distTar') { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
tasks.getByName('distZip') { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
tasks.getByName('jar') { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }